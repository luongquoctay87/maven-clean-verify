# ===============================
# APPLICATION SETTING
# ===============================
spring.application.name=order-service
server.servlet.context-path=/api/order-service
server.port=2634

# ===============================
# EUREKA CLIENT
# ===============================
eureka.client.serviceUrl.defaultZone=http://${EUREKA_USER:eureka}:${EUREKA_PASSWORD:password}@service-registry:8761/eureka

## ===============================
## ZIPKIN SERVER
## ===============================
spring.zipkin.base-url=http://zipkin:9411
spring.sleuth.sampler.probability=1.0

## ===============================
## OpenAPI Definition
## ===============================
springdoc.api-docs.path=/api-docs
api.info.title=Order API Services
api.info.description=API to fetch order details for application
api.info.version=1.0.0
api.info.terms-of-service=https://company.com.vn/terms/
api.info.contact.name=SOFTWARE CO., LTD
api.info.contact.email=contact@company.com.vn
api.info.contact.url=https://company.com.vn/
api.info.license.name=Apache 2.0
api.info.license.url=http://www.apache.org/licenses/LICENSE-2.0.html

# ===============================
# DATABASE
# ===============================
spring.datasource.url=jdbc:mysql://${MYSQL_URL:mysql}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:order-service}
spring.datasource.username=${MYSQL_USER:mysql}
spring.datasource.password=${MYSQL_PASSWORD:password}

# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.user.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update

# ===============================
# ACTUATOR ENDPOINTS & PROMETHEUS
# ===============================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true

# KAFKA producer
# ===============================
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.service.order.event.PlacedOrderEvent

# ===============================
# Resilience4J Circuit Breakers
# ===============================
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=count_based

# Timeout properties
resilience4j.timelimiter.metrics.enabled=true
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
resilience4j.timelimiter.instances.inventory.cancel-running-future=true

# Retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
